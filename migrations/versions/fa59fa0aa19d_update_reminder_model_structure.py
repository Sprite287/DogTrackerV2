"""Update Reminder model structure

Revision ID: fa59fa0aa19d
Revises: f17680ad3dbf
Create Date: 2025-05-21 02:47:16.274540

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fa59fa0aa19d'
down_revision = 'f17680ad3dbf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # First, drop the existing reminder table if it exists to avoid conflicts with NOT NULL columns on existing data.
    # This assumes any data in the old reminder table is not needed.
    op.execute('DROP TABLE IF EXISTS reminder CASCADE') # Use CASCADE to handle potential FKs pointing to it, though unlikely for this table.

    # Create the new reminder table with the desired schema
    op.create_table('reminder',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('due_datetime', sa.DateTime(), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=False, server_default='pending'),
        sa.Column('reminder_type', sa.String(length=50), nullable=False),
        sa.Column('dog_id', sa.Integer(), nullable=False),
        sa.Column('appointment_id', sa.Integer(), nullable=True),
        sa.Column('dog_medicine_id', sa.Integer(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.func.now()), # onupdate=sa.func.now() is ORM level, server_default for creation

        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
        sa.ForeignKeyConstraint(['appointment_id'], ['appointment.id'], ),
        sa.ForeignKeyConstraint(['dog_medicine_id'], ['dog_medicine.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_index(op.f('ix_reminder_due_datetime'), 'reminder', ['due_datetime'], unique=False)
    op.create_index(op.f('ix_reminder_reminder_type'), 'reminder', ['reminder_type'], unique=False)
    op.create_index(op.f('ix_reminder_status'), 'reminder', ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # To properly downgrade, we would need to recreate the OLD reminder table structure.
    # The auto-generated downgrade drops columns from the new structure, which is not a true revert if the table was dropped.
    # For simplicity, this downgrade will just drop the new table.
    # A more complete downgrade would op.create_table with the old schema.

    op.drop_index(op.f('ix_reminder_status'), table_name='reminder')
    op.drop_index(op.f('ix_reminder_reminder_type'), table_name='reminder')
    op.drop_index(op.f('ix_reminder_due_datetime'), table_name='reminder')
    op.drop_table('reminder')
    # Re-create the old table structure if a full downgrade is needed.
    # op.create_table('reminder',
    #     sa.Column('id', sa.Integer(), nullable=False, primary_key=True),
    #     sa.Column('user_id', sa.Integer(), sa.ForeignKey('user.id'), nullable=False),
    #     sa.Column('appointment_id', sa.Integer(), sa.ForeignKey('appointment.id'), nullable=True),
    #     sa.Column('dog_medicine_id', sa.Integer(), sa.ForeignKey('dog_medicine.id'), nullable=True),
    #     sa.Column('reminder_time', sa.String(20), nullable=True),
    #     sa.Column('custom_offset', sa.Integer(), nullable=True),
    #     sa.Column('sent', sa.Boolean(), default=False, nullable=True) # Original 'sent' was default=False
    # )

    # ### end Alembic commands ###
