"""Initial migration after reset

Revision ID: d365f7fe8597
Revises: 
Create Date: 2025-05-28 00:17:56.025776

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd365f7fe8597'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_first_user', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_verification_token', sa.String(length=100), nullable=True),
    sa.Column('password_reset_token', sa.String(length=100), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.Column('data_consent', sa.Boolean(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('invite_code', sa.String(length=32), nullable=True),
    sa.Column('can_edit', sa.Boolean(), nullable=True),
    sa.Column('rescue_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('rescue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('approved_date', sa.DateTime(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('primary_contact_name', sa.String(length=120), nullable=True),
    sa.Column('primary_contact_email', sa.String(length=120), nullable=True),
    sa.Column('primary_contact_phone', sa.String(length=50), nullable=True),
    sa.Column('data_consent', sa.Boolean(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('primary_contact_email')
    )
    op.create_foreign_key('fk_user_rescue_id', 'user', 'rescue', ['rescue_id'], ['id'])
    op.create_foreign_key('fk_rescue_approved_by', 'rescue', 'user', ['approved_by'], ['id'])
    op.create_table('appointment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rescue_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('rescue_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=100), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('execution_time', sa.Float(), nullable=True),
    sa.Column('occurrence_count', sa.Integer(), nullable=True),
    sa.Column('last_occurrence', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_log_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_rescue_id'), ['rescue_id'], unique=False)
        batch_op.create_index('ix_audit_log_rescue_id_timestamp', ['rescue_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_resource_id'), ['resource_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_resource_type'), ['resource_type'], unique=False)
        batch_op.create_index('ix_audit_log_resource_type_id_timestamp', ['resource_type', 'resource_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_audit_log_user_id_action_timestamp', ['user_id', 'action', 'timestamp'], unique=False)

    op.create_table('dog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('age', sa.String(length=20), nullable=True),
    sa.Column('breed', sa.String(length=120), nullable=True),
    sa.Column('adoption_status', sa.String(length=50), nullable=True),
    sa.Column('intake_date', sa.Date(), nullable=True),
    sa.Column('microchip_id', sa.String(length=120), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('medical_info', sa.Text(), nullable=True),
    sa.Column('rescue_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine_preset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rescue_id', sa.Integer(), nullable=True),
    sa.Column('is_global', sa.Boolean(), nullable=False),
    sa.Column('created_by_rescue_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('default_dosage_instructions', sa.Text(), nullable=True),
    sa.Column('suggested_units', sa.String(length=255), nullable=True),
    sa.Column('default_unit', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_rescue_id'], ['rescue.id'], ),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dog_id', sa.Integer(), nullable=False),
    sa.Column('rescue_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('recurrence', sa.String(length=20), nullable=True),
    sa.Column('recurrence_value', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['appointment_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dog_medicine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dog_id', sa.Integer(), nullable=False),
    sa.Column('rescue_id', sa.Integer(), nullable=False),
    sa.Column('medicine_id', sa.Integer(), nullable=True),
    sa.Column('custom_name', sa.String(length=120), nullable=True),
    sa.Column('dosage', sa.String(length=50), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=False),
    sa.Column('form', sa.String(length=100), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=False),
    sa.Column('frequency_value', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicine_preset.id'], ),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dog_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dog_id', sa.Integer(), nullable=False),
    sa.Column('rescue_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('note_text', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('dog_note', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dog_note_timestamp'), ['timestamp'], unique=False)

    op.create_table('rescue_medicine_activation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rescue_id', sa.Integer(), nullable=False),
    sa.Column('medicine_preset_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('activated_at', sa.DateTime(), nullable=False),
    sa.Column('deactivated_at', sa.DateTime(), nullable=True),
    sa.Column('deactivated_by', sa.Integer(), nullable=True),
    sa.Column('reactivated_at', sa.DateTime(), nullable=True),
    sa.Column('reactivated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['deactivated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['medicine_preset_id'], ['medicine_preset.id'], ),
    sa.ForeignKeyConstraint(['reactivated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('rescue_medicine_activation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rescue_medicine_activation_medicine_preset_id'), ['medicine_preset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_rescue_medicine_activation_rescue_id'), ['rescue_id'], unique=False)

    op.create_table('dog_medicine_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dog_medicine_id', sa.Integer(), nullable=False),
    sa.Column('date_given', sa.Date(), nullable=True),
    sa.Column('given_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['dog_medicine_id'], ['dog_medicine.id'], ),
    sa.ForeignKeyConstraint(['given_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reminder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('due_datetime', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('reminder_type', sa.String(length=50), nullable=False),
    sa.Column('dog_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.Column('dog_medicine_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointment.id'], ),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
    sa.ForeignKeyConstraint(['dog_medicine_id'], ['dog_medicine.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reminder', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reminder_due_datetime'), ['due_datetime'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminder_reminder_type'), ['reminder_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminder_status'), ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reminder', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reminder_status'))
        batch_op.drop_index(batch_op.f('ix_reminder_reminder_type'))
        batch_op.drop_index(batch_op.f('ix_reminder_due_datetime'))

    op.drop_table('reminder')
    op.drop_table('dog_medicine_history')
    with op.batch_alter_table('rescue_medicine_activation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rescue_medicine_activation_rescue_id'))
        batch_op.drop_index(batch_op.f('ix_rescue_medicine_activation_medicine_preset_id'))

    op.drop_table('rescue_medicine_activation')
    with op.batch_alter_table('dog_note', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dog_note_timestamp'))

    op.drop_table('dog_note')
    op.drop_table('dog_medicine')
    op.drop_table('appointment')
    op.drop_table('medicine_preset')
    op.drop_table('dog')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_index('ix_audit_log_user_id_action_timestamp')
        batch_op.drop_index(batch_op.f('ix_audit_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_timestamp'))
        batch_op.drop_index('ix_audit_log_resource_type_id_timestamp')
        batch_op.drop_index(batch_op.f('ix_audit_log_resource_type'))
        batch_op.drop_index(batch_op.f('ix_audit_log_resource_id'))
        batch_op.drop_index('ix_audit_log_rescue_id_timestamp')
        batch_op.drop_index(batch_op.f('ix_audit_log_rescue_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_action'))

    op.drop_table('audit_log')
    op.drop_table('appointment_type')
    op.drop_table('rescue')
    op.drop_table('user')
    # ### end Alembic commands ###
