"""Add AuditLog model for audit system (clean)

Revision ID: 62857dc28040
Revises: a32b8efd5fa1
Create Date: 2025-05-25 14:22:04.746643

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '62857dc28040'
down_revision = 'a32b8efd5fa1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('rescue_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=100), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('execution_time', sa.Float(), nullable=True),
    sa.Column('occurrence_count', sa.Integer(), nullable=True),
    sa.Column('last_occurrence', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rescue_id'], ['rescue.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_log_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_rescue_id'), ['rescue_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_resource_id'), ['resource_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_resource_type'), ['resource_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('rescue', schema=None) as batch_op:
        batch_op.drop_constraint('rescue_email_key', type_='unique')
        batch_op.drop_constraint('rescue_name_key', type_='unique')
        batch_op.drop_constraint('rescue_approved_by_fkey', type_='foreignkey')
        batch_op.drop_column('status')
        batch_op.drop_column('data_consent')
        batch_op.drop_column('marketing_consent')
        batch_op.drop_column('approved_by')
        batch_op.drop_column('primary_contact_email')
        batch_op.drop_column('approved_date')
        batch_op.drop_column('primary_contact_name')
        batch_op.drop_column('registration_date')
        batch_op.drop_column('primary_contact_phone')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('user_email_key', type_='unique')
        batch_op.drop_column('data_consent')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('email')
        batch_op.drop_column('password_reset_token')
        batch_op.drop_column('marketing_consent')
        batch_op.drop_column('password_reset_expires')
        batch_op.drop_column('last_login')
        batch_op.drop_column('email_verification_token')
        batch_op.drop_column('is_first_user')
        batch_op.drop_column('is_active')
        batch_op.drop_column('created_at')
        batch_op.drop_column('email_verified')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_verified', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_first_user', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email_verification_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('password_reset_expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('marketing_consent', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('password_reset_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('data_consent', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('user_email_key', ['email'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('rescue', schema=None) as batch_op:
        batch_op.add_column(sa.Column('primary_contact_phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('primary_contact_name', sa.VARCHAR(length=120), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('approved_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('primary_contact_email', sa.VARCHAR(length=120), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('approved_by', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('marketing_consent', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('data_consent', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('rescue_approved_by_fkey', 'user', ['approved_by'], ['id'])
        batch_op.create_unique_constraint('rescue_name_key', ['name'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint('rescue_email_key', ['email'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_timestamp'))
        batch_op.drop_index(batch_op.f('ix_audit_log_resource_type'))
        batch_op.drop_index(batch_op.f('ix_audit_log_resource_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_rescue_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_action'))

    op.drop_table('audit_log')
    # ### end Alembic commands ###
